

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Définition du modèle "User"
model User {
  id                String       @id @default(cuid())
  role_id           Int          @default(1)
  nom               String?
  prenom            String?
  numero            String?
  email             String    @unique
  avatar            String    @default("users/default.png")
  email_verified    Boolean    @default(false)
  email_verified_at DateTime?
  password          String?
  provider_id         String?
  adresse_ip        String?
  newsletters       Int       @default(1)

  accounts      Account[]
  sessions      Session[]
  role              Role      @relation(fields: [role_id], references: [id])
}

// Définition du modèle "Role"
model Role {
  id       Int     @id @default(1)
  name     String?
  description     String?
  
  users    User[]
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}